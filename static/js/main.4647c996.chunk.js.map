{"version":3,"sources":["Components/Header/HomeIcon.js","Components/Header/Header.js","Components/Header/styles.js","Components/Authentication/Login/Login.js","Components/Authentication/Login/styles.js","Components/Home/Home.js","Components/Home/styles.js","Components/CreatePost/CreatePost.js","Components/CreatePost/styles.js","Components/Authentication/Logout/Logout.js","Components/Authentication/Logout/styles.js","Components/ProtectedRoute/ProtectedRoute.js","Components/PostsComponent/styles.js","Components/PostNonEditable/styles.js","Components/PostNonEditable/PostNonEditable.js","Components/PostsComponent/Posts.js","Components/PostEditable/styles.js","Components/PostEditable/PostEditable.js","Components/CreateComment/CreateComment.js","Components/CreateComment/styles.js","Components/CommentEditable/styles.js","Components/CommentEditable/CommentEditable.js","Components/Comments/Comments.js","Components/Comments/styles.js","Components/PostDetails/PostDetails.js","Components/PostDetails/styles.js","Helpers/ScrollToTop/ScrollToTop.js","Components/Main/Main.js","Components/Main/styles.js","serviceWorker.js","index.js"],"names":["HomeIcon","props","SvgIcon","d","VARIABLES","Header","handleCreatePostClick","icClicked","isLoggedIn","this","classes","AppBar","position","Toolbar","className","toolbar","to","logo","IconButton","edge","color","aria-label","onClick","e","fontSize","Typography","variant","createPostLink","Button","linkBtn","size","authLink","React","Component","withStyles","display","justifyContent","textDecoration","marginLeft","Login","onUsernameChange","event","setState","username","target","value","onPasswordChange","password","handleLogIn","state","history","isCreatePostClicked","newUser","trim","push","loginContainer","loginContent","titleSection","title","usernameInput","TextField","id","label","fullWidth","onChange","passwordInput","type","autoComplete","loginBtn","withRouter","width","marginTop","fontWeight","marginBottom","margin","homeContainer","homeContent","textAlign","textSection","text","path","monthNames","CreatePost","onTitleChange","onContentChange","content","onPostAdd","date","Date","now","getMonth","getDate","getFullYear","posts","currentId","userId","currentUserId","uuid","localStorage","setItem","JSON","stringify","handlePostAdd","parse","getItem","createPostContainer","createPostContent","Card","cardSection","CardContent","gutterBottom","titleTextField","placeholder","contentDiv","contentTextField","multiline","rows","btnDiv","Fab","boxShadow","Logout","handleLogOut","logoutContainer","logoutContent","logoutTitleSection","logoutText","flexDirection","alignItems","ProtectedRoute","component","rest","computedMatch","postId","params","pathname","styles","postContainer","cardWrapper","padding","avatarSection","avatar","backgroundColor","red","contentSection","CardActions","learnMoreLink","post","user","find","toUpperCase","Avatar","Posts","postsContainer","postSection","ul","map","key","editIcon","buttonsSection","PostEditable","handleIsEdit","onSubmit","onRemove","filter","comments","comment","isEdit","users","correctUser","disabled","CreateComment","onCommentChange","onCommentAdd","newComment","createCommentContainer","createCommentContent","commentDiv","commentTextField","userSection","commentSection","CommentEditable","commentText","onCommentRemove","filteredComments","PostDetails","commentToRemove","createCommentSection","commentsSection","alignSelf","ScrollToTop","prevProps","location","window","scrollTo","children","Main","loggedUser","isOnline","newUsers","isClicked","some","mainContainer","exact","length","minHeight","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4647c996.chunk.js","sourcesContent":["import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nfunction HomeIcon(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n\r\nexport default HomeIcon;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HomeIcon from './HomeIcon';\r\nimport { styles } from './styles';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst VARIABLES = {\r\n  home: 'Blog',\r\n  createPost: 'Create Post',\r\n  loginButtonLabel: 'Log in',\r\n  logoutButtonLabel: 'Log out'\r\n};\r\n\r\nclass Header extends React.Component {\r\n  handleCreatePostClick = icClicked => {\r\n    const { isLoggedIn, handleCreatePostClick } = this.props;\r\n\r\n    if (!isLoggedIn) {\r\n      handleCreatePostClick(icClicked);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, isLoggedIn } = this.props;\r\n\r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Link to=\"/blog-react/\" className={classes.logo}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"blog\"\r\n              onClick={e => this.handleCreatePostClick(false, e)}\r\n            >\r\n              <HomeIcon fontSize=\"large\" />\r\n              <Typography variant=\"h4\">{VARIABLES.home}</Typography>\r\n            </IconButton>\r\n          </Link>\r\n          <Link to=\"/blog-react/create\" className={classes.createPostLink}>\r\n            <Button\r\n              className={classes.linkBtn}\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              onClick={() => this.handleCreatePostClick(true)}\r\n            >\r\n              {VARIABLES.createPost}\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"/blog-react/auth\" className={classes.authLink}>\r\n            {isLoggedIn ? (\r\n              <Button className={classes.linkBtn} size=\"large\">\r\n                {VARIABLES.logoutButtonLabel}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                className={classes.linkBtn}\r\n                size=\"large\"\r\n                onClick={() => this.handleCreatePostClick(false)}\r\n              >\r\n                {VARIABLES.loginButtonLabel}\r\n              </Button>\r\n            )}\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","export const styles = {\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  logo: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  createPostLink: {\r\n    marginLeft: '40px',\r\n    textDecoration: 'none'\r\n  },\r\n  authLink: {\r\n    marginLeft: 'auto',\r\n    textDecoration: 'none'\r\n  },\r\n  linkBtn: {\r\n    color: 'white'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { styles } from './styles';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst VARIABLES = {\r\n  title: 'Log in',\r\n  usernameLabel: '* Username',\r\n  passwordLabel: '* Password',\r\n  buttonLabel: 'Log In'\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  onUsernameChange = event => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  handleLogIn = () => {\r\n    const { username, password } = this.state;\r\n    const {\r\n      isLoggedIn,\r\n      history,\r\n      isCreatePostClicked,\r\n      handleCreatePostClick\r\n    } = this.props;\r\n\r\n    if (username && password) {\r\n      const newUser = { username: username.trim(), password };\r\n\r\n      this.setState({ username: '', password: '' }, () => {\r\n        isLoggedIn(true, newUser);\r\n\r\n        if (isCreatePostClicked) {\r\n          history.push('/blog-react/create');\r\n\r\n          handleCreatePostClick(false);\r\n        } else {\r\n          history.push('/blog-react/');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.loginContainer}>\r\n        <div className={classes.loginContent}>\r\n          <div className={classes.titleSection}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {VARIABLES.title}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <div className={classes.usernameInput}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label={VARIABLES.usernameLabel}\r\n                fullWidth\r\n                value={username}\r\n                onChange={e => this.onUsernameChange(e)}\r\n              />\r\n            </div>\r\n            <div className={classes.passwordInput}>\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label={VARIABLES.passwordLabel}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                fullWidth\r\n                value={password}\r\n                onChange={e => this.onPasswordChange(e)}\r\n              />\r\n            </div>\r\n            <div className={classes.loginBtn}>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={() => this.handleLogIn()}\r\n              >\r\n                {VARIABLES.buttonLabel}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Login));\r\n","export const styles = {\r\n  loginContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  loginContent: {\r\n    width: '50%'\r\n  },\r\n  titleSection: {\r\n    marginTop: '20px'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  usernameInput: {\r\n    marginTop: '16px',\r\n    marginBottom: '8px'\r\n  },\r\n  passwordInput: {\r\n    marginTop: '16px',\r\n    marginBottom: '8px'\r\n  },\r\n  loginBtn: {\r\n    margin: '30px 0'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Login from '../Authentication/Login/Login';\r\n\r\nconst VARIABLES = {\r\n  header: 'There is no post on web-site.',\r\n  textAsLinkToLogIn: 'Log in',\r\n  textIsNotLoggedIn: ' and be our first story teller.',\r\n  textAsLinkToPosts: 'share your story!',\r\n  textIsLoggedIn: \"You've logged in, \"\r\n};\r\n\r\nfunction Home({ classes, isLoggedIn }) {\r\n  return (\r\n    <div className={classes.homeContainer}>\r\n      <div className={classes.homeContent}>\r\n        <div className={classes.titleSection}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            {VARIABLES.header}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.textSection}>\r\n          {isLoggedIn ? (\r\n            <Typography variant=\"h4\" className={classes.text}>\r\n              {VARIABLES.textIsLoggedIn}{' '}\r\n              <Link to=\"/blog-react/create\">{VARIABLES.textAsLinkToPosts}</Link>\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h4\" className={classes.text}>\r\n              <Link to=\"/blog-react/auth\">{VARIABLES.textAsLinkToLogIn}</Link>\r\n              {VARIABLES.textIsNotLoggedIn}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <Route path=\"/blog-react/auth\">\r\n          <Login />\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);\r\n","export const styles = {\r\n  homeContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  homeContent: {\r\n    width: '50%'\r\n  },\r\n  titleSection: {\r\n    marginTop: '20px',\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  textSection: {\r\n    marginTop: '40px',\r\n    textAlign: 'center'\r\n  },\r\n  text: {\r\n    fontWeight: 'bold'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst VARIABLES = {\r\n  title: 'Tell us your story!'\r\n};\r\n\r\nconst monthNames = [\r\n  'JAN',\r\n  'FEB',\r\n  'MAR',\r\n  'APR',\r\n  'MAY',\r\n  'JUN',\r\n  'JUL',\r\n  'AUG',\r\n  'SEP',\r\n  'OCT',\r\n  'NOV',\r\n  'DEC'\r\n];\r\n\r\nclass CreatePost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentId = uuid();\r\n    const posts = JSON.parse(localStorage.getItem('posts')) || [];\r\n\r\n    this.state = {\r\n      title: '',\r\n      content: '',\r\n      posts,\r\n      currentId,\r\n      currentUserId: this.props.currentUserId\r\n    };\r\n  }\r\n\r\n  onTitleChange = event => {\r\n    this.setState({ title: event.target.value });\r\n  };\r\n\r\n  onContentChange = event => {\r\n    this.setState({ content: event.target.value });\r\n  };\r\n\r\n  onPostAdd = () => {\r\n    const date = new Date();\r\n    const now =\r\n      monthNames[date.getMonth()] +\r\n      ' ' +\r\n      date.getDate() +\r\n      ' ' +\r\n      date.getFullYear();\r\n\r\n    this.setState(\r\n      state => ({\r\n        posts: [\r\n          {\r\n            id: state.currentId,\r\n            title: state.title,\r\n            content: state.content,\r\n            date: now,\r\n            userId: state.currentUserId\r\n          },\r\n          ...state.posts\r\n        ],\r\n        currentId: uuid(),\r\n        title: '',\r\n        content: ''\r\n      }),\r\n      () => {\r\n        localStorage.setItem('posts', JSON.stringify(this.state.posts));\r\n\r\n        this.props.handlePostAdd(this.state.posts);\r\n        this.props.history.push('/blog-react/');\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { title, content } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.createPostContainer}>\r\n        <div className={classes.createPostContent}>\r\n          <Card className={classes.cardSection}>\r\n            <CardContent>\r\n              <Typography className={classes.title} variant=\"h6\" gutterBottom>\r\n                {VARIABLES.title}\r\n              </Typography>\r\n              <div>\r\n                <TextField\r\n                  className={classes.titleTextField}\r\n                  placeholder=\"Write the title...\"\r\n                  id=\"standard-basic\"\r\n                  label=\"* Title\"\r\n                  value={title}\r\n                  onChange={e => this.onTitleChange(e)}\r\n                />\r\n              </div>\r\n              <div className={classes.contentDiv}>\r\n                <TextField\r\n                  className={classes.contentTextField}\r\n                  placeholder=\"Write the post...\"\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"* Content\"\r\n                  multiline\r\n                  rows=\"10\"\r\n                  value={content}\r\n                  onChange={e => this.onContentChange(e)}\r\n                />\r\n              </div>\r\n              <div className={classes.btnDiv}>\r\n                <Fab color=\"primary\" onClick={this.onPostAdd}>\r\n                  <CheckIcon />\r\n                </Fab>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreatePost.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(CreatePost));\r\n","export const styles = {\n  createPostContainer: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  createPostContent: {\n    width: '75%'\n  },\n  cardSection: {\n    margin: '20px',\n    boxShadow:\n      '0px 1px 5px 0px rgba(0, 0, 0, 0.2),' +\n      ' 0px 2px 2px 0px rgba(0, 0, 0, 0.14),' +\n      ' 0px 3px 1px -2px rgba(0, 0, 0, 0.12)'\n  },\n  title: {\n    textAlign: 'center'\n  },\n  titleTextField: {\n    width: '75%'\n  },\n  contentDiv: {\n    margin: '16px 0'\n  },\n  contentTextField: {\n    width: '100%'\n  },\n  btnDiv: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styles } from './styles';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst VARIABLES = {\r\n  title: 'Log out',\r\n  text: 'Are you sure you want to log out?',\r\n  buttonLabel: 'Log out'\r\n};\r\n\r\nclass Logout extends React.Component {\r\n  handleLogOut = () => {\r\n    const {\r\n      isLoggedIn,\r\n      isCreatePostClicked,\r\n      handleCreatePostClick\r\n    } = this.props;\r\n    isLoggedIn(false);\r\n\r\n    if (isCreatePostClicked) {\r\n      handleCreatePostClick(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.logoutContainer}>\r\n        <div className={classes.logoutContent}>\r\n          <div className={classes.logoutTitleSection}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              {VARIABLES.title}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.logoutText}>\r\n            <Typography variant=\"h6\">{VARIABLES.text}</Typography>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onClick={() => this.handleLogOut()}\r\n            >\r\n              {VARIABLES.buttonLabel}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Logout);\r\n","export const styles = {\r\n  logoutContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  logoutContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '50%'\r\n  },\r\n  logoutTitleSection: {\r\n    margin: '20px 0'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  logoutText: {\r\n    margin: '16px 0'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Login from '../Authentication/Login';\r\nimport Logout from '../Authentication/Logout';\r\n\r\nexport default function ProtectedRoute({ component: Component, ...rest }) {\r\n  const {\r\n    isLoggedIn,\r\n    path,\r\n    handleLogIn,\r\n    handleLogOut,\r\n    handleCreatePostClick,\r\n    isCreatePostClicked,\r\n    currentUserId,\r\n    handlePostAdd,\r\n    posts,\r\n    computedMatch\r\n  } = rest;\r\n\r\n  if (path === '/blog-react/auth') {\r\n    return isLoggedIn ? (\r\n      <Route path={path}>\r\n        <Logout\r\n          isLoggedIn={handleLogOut}\r\n          isCreatePostClicked={isCreatePostClicked}\r\n          handleCreatePostClick={handleCreatePostClick}\r\n        />\r\n      </Route>\r\n    ) : (\r\n      <Route path={path}>\r\n        <Login\r\n          isLoggedIn={handleLogIn}\r\n          isCreatePostClicked={isCreatePostClicked}\r\n          handleCreatePostClick={handleCreatePostClick}\r\n        />\r\n      </Route>\r\n    );\r\n  } else {\r\n    return isLoggedIn ? (\r\n      <Route path={path}>\r\n        <Component\r\n          currentUserId={currentUserId}\r\n          handlePostAdd={handlePostAdd}\r\n          posts={posts}\r\n          {...rest}\r\n          postId={computedMatch.params.id}\r\n        />\r\n      </Route>\r\n    ) : (\r\n      <Redirect to={{ pathname: '/blog-react/auth' }} />\r\n    );\r\n  }\r\n}\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleSection: {\r\n    margin: '20px'\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  ul: {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n};\r\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  contentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  learnMoreLink: {\r\n    textDecoration: 'none'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction PostNonEditable(props) {\r\n  const { classes } = props;\r\n  const { title, content, date, userId, id } = props.post;\r\n  const users = JSON.parse(localStorage.getItem('users'));\r\n  const user = users.find(user => user.id === userId);\r\n  const avatar = user.username[0].toUpperCase();\r\n\r\n  return (\r\n    <div className={classes.postContainer}>\r\n      <div className={classes.cardSection}>\r\n        <Card className={classes.cardWrapper}>\r\n          <CardContent className={classes.CardContent}>\r\n            <div className={classes.titleSection}>\r\n              <div className={classes.avatarSection}>\r\n                <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n              </div>\r\n              <div>\r\n                <Typography gutterBottom>{title}</Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                  {date} by {user.username}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.contentSection}>\r\n              <Typography>{content}</Typography>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions className={classes.CardActions}>\r\n            <Link\r\n              to={`/blog-react/post/${id}`}\r\n              className={classes.learnMoreLink}\r\n            >\r\n              <Button size=\"medium\" color=\"secondary\">\r\n                Learn More\r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostNonEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostNonEditable);\r\n","import React from 'react';\nimport { styles } from './styles';\nimport PropTypes from 'prop-types';\nimport Post from '../PostNonEditable';\n\nimport { withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst VARIABLES = {\n  title: 'Posts'\n};\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const posts = JSON.parse(localStorage.getItem('posts')) || [];\n\n    this.state = {\n      posts\n    };\n  }\n\n  render() {\n    const { posts } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.postsContainer}>\n        <div className={classes.titleSection}>\n          <Typography className={classes.title} variant=\"h4\">\n            {VARIABLES.title}\n          </Typography>\n        </div>\n        <div className={classes.postSection}>\n          <ul className={classes.ul}>\n            {posts.map(post => (\n              <Post key={post.id} post={post} />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Posts);\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  editIcon: {\r\n    marginLeft: 'auto'\r\n  },\r\n  contentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  contentTextField: {\r\n    width: '100%'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  buttonsSection: {\r\n    display: 'flex'\r\n  },\r\n  btnDiv: {\r\n    marginLeft: '20px'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { withStyles } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass PostEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { posts, post, comments, currentUserId } = this.props;\r\n    const content = post.content;\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n    const user = users.find(user => user.id === post.userId);\r\n\r\n    this.state = {\r\n      posts,\r\n      post,\r\n      content,\r\n      comments,\r\n      currentUserId,\r\n      users,\r\n      user,\r\n      isEdit: false\r\n    };\r\n  }\r\n\r\n  onContentChange = event => {\r\n    this.setState({ content: event.target.value });\r\n  };\r\n\r\n  handleIsEdit = () => {\r\n    this.onSubmit();\r\n  };\r\n\r\n  onRemove = () => {\r\n    this.setState(\r\n      state => ({\r\n        posts: state.posts.filter(post => post.id !== state.post.id),\r\n        comments: state.comments.filter(\r\n          comment => comment.postId !== state.post.id\r\n        )\r\n      }),\r\n      () => {\r\n        localStorage.setItem('posts', JSON.stringify(this.state.posts));\r\n        localStorage.setItem('comments', JSON.stringify(this.state.comments));\r\n        this.props.history.push('/blog-react/');\r\n      }\r\n    );\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState(\r\n      state => ({\r\n        post: { ...state.post, content: state.content }\r\n      }),\r\n      () =>\r\n        this.setState(\r\n          state => ({\r\n            posts: state.posts.map(post =>\r\n              post.id === state.post.id ? state.post : post\r\n            ),\r\n            isEdit: !state.isEdit\r\n          }),\r\n          () => localStorage.setItem('posts', JSON.stringify(this.state.posts))\r\n        )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { content, isEdit, user, currentUserId } = this.state;\r\n    const { classes } = this.props;\r\n    const { title, date } = this.state.post;\r\n    const avatar = user.username[0].toUpperCase();\r\n    const correctUser = currentUserId === user.id;\r\n\r\n    return (\r\n      <div className={classes.postContainer}>\r\n        <div className={classes.cardSection}>\r\n          <Card className={classes.cardWrapper}>\r\n            <CardContent className={classes.CardContent}>\r\n              <div className={classes.titleSection}>\r\n                <div className={classes.avatarSection}>\r\n                  <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n                </div>\r\n                <div>\r\n                  <Typography gutterBottom>{title}</Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {date} by {user.username}\r\n                  </Typography>\r\n                </div>\r\n                <div className={classes.editIcon}>\r\n                  <IconButton\r\n                    onClick={() => this.handleIsEdit()}\r\n                    disabled={!correctUser}\r\n                  >\r\n                    <CreateIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <div className={classes.contentSection}>\r\n                {isEdit ? (\r\n                  <TextField\r\n                    className={classes.contentTextField}\r\n                    placeholder=\"Write the post...\"\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Post\"\r\n                    multiline\r\n                    rows=\"5\"\r\n                    value={content}\r\n                    onChange={e => this.onContentChange(e)}\r\n                  />\r\n                ) : (\r\n                  <Typography>{content}</Typography>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n            <CardActions className={classes.CardActions}>\r\n              <div className={classes.buttonsSection}>\r\n                <div className={classes.btnDiv}>\r\n                  <Fab\r\n                    onClick={this.onRemove}\r\n                    disabled={!correctUser}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </Fab>\r\n                </div>\r\n                <div className={classes.btnDiv}>\r\n                  <Fab\r\n                    color=\"primary\"\r\n                    disabled={!isEdit}\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    <CheckIcon />\r\n                  </Fab>\r\n                </div>\r\n              </div>\r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(PostEditable));\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst monthNames = [\r\n  'JAN',\r\n  'FEB',\r\n  'MAR',\r\n  'APR',\r\n  'MAY',\r\n  'JUN',\r\n  'JUL',\r\n  'AUG',\r\n  'SEP',\r\n  'OCT',\r\n  'NOV',\r\n  'DEC'\r\n];\r\n\r\nclass CreateComment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentId = uuid();\r\n\r\n    this.state = {\r\n      comment: '',\r\n      currentId,\r\n      postId: this.props.post.id,\r\n      userId: this.props.currentUserId\r\n    };\r\n  }\r\n\r\n  onCommentChange = event => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onCommentAdd = () => {\r\n    const { currentId, comment, userId, postId } = this.state;\r\n    const date = new Date();\r\n    const now =\r\n      monthNames[date.getMonth()] +\r\n      ' ' +\r\n      date.getDate() +\r\n      ' ' +\r\n      date.getFullYear();\r\n\r\n    const newComment = {\r\n      id: currentId,\r\n      comment,\r\n      date: now,\r\n      userId,\r\n      postId\r\n    };\r\n\r\n    this.setState({ comment: '', currentId: uuid() }, () => {\r\n      this.props.onCommentAdd(newComment);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { comment } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.createCommentContainer}>\r\n        <div className={classes.createCommentContent}>\r\n          <div className={classes.commentDiv}>\r\n            <TextField\r\n              className={classes.commentTextField}\r\n              placeholder=\"Write the comment...\"\r\n              id=\"standard-multiline-static\"\r\n              label=\"* Comment\"\r\n              multiline\r\n              rows=\"4\"\r\n              value={comment}\r\n              onChange={e => this.onCommentChange(e)}\r\n            />\r\n          </div>\r\n          <div className={classes.btnDiv}>\r\n            <Fab\r\n              color=\"primary\"\r\n              onClick={this.onCommentAdd}\r\n              disabled={!comment}\r\n            >\r\n              <CheckIcon />\r\n            </Fab>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateComment.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CreateComment);\r\n","export const styles = {\r\n  createCommentContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  createCommentContent: {\r\n    width: '75%'\r\n  },\r\n  commentDiv: {\r\n    margin: '16px 0'\r\n  },\r\n  commentTextField: {\r\n    width: '100%'\r\n  },\r\n  btnDiv: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n};\r\n","import { red } from '@material-ui/core/colors';\r\n\r\nexport const styles = {\r\n  postContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  cardSection: {\r\n    width: '75%'\r\n  },\r\n  cardWrapper: {\r\n    margin: '20px',\r\n    padding: '20px',\r\n    boxShadow:\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)'\r\n  },\r\n  CardContent: {\r\n    padding: 0\r\n  },\r\n  titleSection: {\r\n    display: 'flex',\r\n    padding: '16px 24px'\r\n  },\r\n  avatarSection: {\r\n    margin: 'auto 16px auto 0'\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  },\r\n  userSection: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  editIcon: {\r\n    marginLeft: 'auto'\r\n  },\r\n  commentSection: {\r\n    padding: '16px 24px'\r\n  },\r\n  commentTextField: {\r\n    width: '100%'\r\n  },\r\n  CardActions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  buttonsSection: {\r\n    display: 'flex'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { withStyles } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass CommentEditable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { comment, comments, currentUserId } = this.props;\r\n    const commentText = comment.comment;\r\n    const users = JSON.parse(localStorage.getItem('users'));\r\n    const user = users.find(user => user.id === comment.userId);\r\n\r\n    this.state = {\r\n      comments,\r\n      comment,\r\n      commentText,\r\n      currentUserId,\r\n      users,\r\n      user,\r\n      isEdit: false\r\n    };\r\n  }\r\n\r\n  onCommentChange = event => {\r\n    this.setState({ commentText: event.target.value });\r\n  };\r\n\r\n  handleIsEdit = () => {\r\n    this.onSubmit();\r\n  };\r\n\r\n  onRemove = () => {\r\n    this.props.onCommentRemove(this.props.comment);\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState(\r\n      state => ({\r\n        comment: { ...state.comment, comment: state.commentText }\r\n      }),\r\n      () =>\r\n        this.setState(\r\n          state => ({\r\n            comments: state.comments.map(comment =>\r\n              comment.id === state.comment.id ? state.comment : comment\r\n            ),\r\n            isEdit: !state.isEdit\r\n          }),\r\n          () =>\r\n            localStorage.setItem(\r\n              'comments',\r\n              JSON.stringify(this.state.comments)\r\n            )\r\n        )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { isEdit, user, currentUserId, commentText } = this.state;\r\n    const { classes } = this.props;\r\n    const { date } = this.state.comment;\r\n    const avatar = user.username[0].toUpperCase();\r\n    const correctUser = currentUserId === user.id;\r\n\r\n    return (\r\n      <div className={classes.postContainer}>\r\n        <div className={classes.cardSection}>\r\n          <Card className={classes.cardWrapper}>\r\n            <CardContent className={classes.CardContent}>\r\n              <div className={classes.titleSection}>\r\n                <div className={classes.avatarSection}>\r\n                  <Avatar className={classes.avatar}>{avatar}</Avatar>\r\n                </div>\r\n                <div className={classes.userSection}>\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {date} by {user.username}\r\n                  </Typography>\r\n                </div>\r\n                <div className={classes.editIcon}>\r\n                  <IconButton\r\n                    onClick={() => this.handleIsEdit()}\r\n                    disabled={!correctUser}\r\n                  >\r\n                    <CreateIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n              <div className={classes.commentSection}>\r\n                {isEdit ? (\r\n                  <TextField\r\n                    className={classes.commentTextField}\r\n                    placeholder=\"Write the comment...\"\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Comment\"\r\n                    multiline\r\n                    rows=\"5\"\r\n                    value={commentText}\r\n                    onChange={e => this.onCommentChange(e)}\r\n                  />\r\n                ) : (\r\n                  <Typography>{commentText}</Typography>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n            <CardActions className={classes.CardActions}>\r\n              <div className={classes.buttonsSection}>\r\n                <div className={classes.btnDiv}>\r\n                  <IconButton\r\n                    onClick={this.onRemove}\r\n                    disabled={!correctUser}\r\n                    color=\"secondary\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div>\r\n                  <IconButton\r\n                    disabled={!isEdit}\r\n                    onClick={this.onSubmit}\r\n                    color=\"primary\"\r\n                  >\r\n                    <CheckIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCommentEditable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CommentEditable);\r\n","import React from 'react';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport Comment from '../CommentEditable';\r\n\r\nfunction Comments({\r\n  classes,\r\n  comments,\r\n  currentUserId,\r\n  onCommentRemove,\r\n  postId\r\n}) {\r\n  const filteredComments = comments.filter(\r\n    comment => comment.postId === postId\r\n  );\r\n\r\n  return (\r\n    <div className={classes.postsContainer}>\r\n      <div className={classes.postSection}>\r\n        <ul className={classes.ul}>\r\n          {filteredComments.map(comment => (\r\n            <Comment\r\n              key={comment.id}\r\n              comment={comment}\r\n              comments={comments}\r\n              currentUserId={currentUserId}\r\n              onCommentRemove={onCommentRemove}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  ul: {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styles } from './styles';\r\nimport Post from '../PostEditable';\r\nimport CreateComment from '../CreateComment';\r\nimport Comments from '../Comments';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst VARIABLES = {\r\n  titlePost: 'Post',\r\n  titleComment: 'Comments'\r\n};\r\n\r\nclass PostDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const posts = JSON.parse(localStorage.getItem('posts')) || [];\r\n    const post = posts.find(post => post.id === this.props.postId);\r\n    const comments = JSON.parse(localStorage.getItem('comments')) || [];\r\n\r\n    this.state = {\r\n      posts,\r\n      post,\r\n      comments\r\n    };\r\n  }\r\n\r\n  onCommentAdd = comment => {\r\n    this.setState(\r\n      state => ({\r\n        comments: [comment, ...state.comments]\r\n      }),\r\n      () => {\r\n        localStorage.setItem('comments', JSON.stringify(this.state.comments));\r\n      }\r\n    );\r\n  };\r\n\r\n  onCommentRemove = commentToRemove => {\r\n    this.setState(\r\n      state => ({\r\n        comments: state.comments.filter(\r\n          comment => comment.id !== commentToRemove.id\r\n        )\r\n      }),\r\n      () =>\r\n        localStorage.setItem('comments', JSON.stringify(this.state.comments))\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { posts, post, comments } = this.state;\r\n    const { classes, currentUserId, postId } = this.props;\r\n\r\n    return (\r\n      <div className={classes.postsContainer}>\r\n        <div className={classes.titleSection}>\r\n          <Typography className={classes.title} variant=\"h4\">\r\n            {VARIABLES.titlePost}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.postSection}>\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            posts={posts}\r\n            comments={comments}\r\n            currentUserId={currentUserId}\r\n          />\r\n        </div>\r\n        <div className={classes.titleSection}>\r\n          <Typography className={classes.title} variant=\"h5\">\r\n            {VARIABLES.titleComment}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.createCommentSection}>\r\n          <CreateComment\r\n            post={post}\r\n            onCommentAdd={this.onCommentAdd}\r\n            comments={comments}\r\n            currentUserId={currentUserId}\r\n          />\r\n        </div>\r\n        <div className={classes.commentsSection}>\r\n          <Comments\r\n            comments={comments}\r\n            currentUserId={currentUserId}\r\n            onCommentRemove={this.onCommentRemove}\r\n            postId={postId}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostDetails);\r\n","export const styles = {\r\n  postsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  titleSection: {\r\n    margin: '10px',\r\n    alignSelf: 'flex-start',\r\n    marginLeft: '12%'\r\n  },\r\n  title: { fontWeight: 'bold' },\r\n  postSection: {\r\n    width: '100%'\r\n  },\r\n  createCommentSection: {\r\n    width: '75%'\r\n  },\r\n  commentsSection: {\r\n    width: '75%'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { styles } from './styles';\r\nimport Header from '../Header';\r\nimport Home from '../Home';\r\nimport CreatePost from '../CreatePost';\r\nimport ProtectedRoute from '../ProtectedRoute';\r\nimport Posts from '../PostsComponent';\r\nimport PostDetails from '../PostDetails';\r\nimport ScrollToTop from '../../Helpers/ScrollToTop';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n    const currentId = uuid();\r\n    const posts = JSON.parse(localStorage.getItem('posts')) || [];\r\n    const isLoggedIn = users.some(user => user.isOnline);\r\n    const currentUserId = isLoggedIn\r\n      ? users.find(user => user.isOnline).id\r\n      : '';\r\n\r\n    this.state = {\r\n      isLoggedIn,\r\n      users,\r\n      currentId,\r\n      isCreatePostClicked: false,\r\n      currentUserId,\r\n      posts\r\n    };\r\n  }\r\n\r\n  handleLogIn = (isLoggedIn, user) => {\r\n    const { username, password } = user;\r\n    const { users } = this.state;\r\n\r\n    const loggedUser = users.find(\r\n      user => user.username === username && user.password === password\r\n    );\r\n\r\n    if (loggedUser) {\r\n      this.setState(\r\n        state => ({\r\n          users: state.users.map(user =>\r\n            user.id === loggedUser.id\r\n              ? { ...user, isOnline: true }\r\n              : { ...user, isOnline: false }\r\n          ),\r\n          isLoggedIn: isLoggedIn,\r\n          currentUserId: loggedUser.id\r\n        }),\r\n        () => localStorage.setItem('users', JSON.stringify(this.state.users))\r\n      );\r\n    } else {\r\n      this.setState(\r\n        state => ({\r\n          users: [\r\n            {\r\n              id: state.currentId,\r\n              username: username,\r\n              password: password,\r\n              isOnline: true\r\n            },\r\n            ...state.users\r\n          ],\r\n          currentId: uuid(),\r\n          isLoggedIn: isLoggedIn,\r\n          currentUserId: state.currentId\r\n        }),\r\n        () => localStorage.setItem('users', JSON.stringify(this.state.users))\r\n      );\r\n    }\r\n  };\r\n\r\n  handleLogOut = isLoggedIn => {\r\n    const { users } = this.state;\r\n\r\n    const newUsers = users.map(user => ({\r\n      ...user,\r\n      isOnline: false\r\n    }));\r\n\r\n    this.setState(\r\n      {\r\n        users: newUsers,\r\n        isLoggedIn: isLoggedIn\r\n      },\r\n      () => localStorage.setItem('users', JSON.stringify(this.state.users))\r\n    );\r\n  };\r\n\r\n  handleCreatePostClick = isClicked => {\r\n    this.setState({ isCreatePostClicked: isClicked });\r\n  };\r\n\r\n  handlePostAdd = posts => {\r\n    this.setState({ posts: posts });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoggedIn,\r\n      isCreatePostClicked,\r\n      currentUserId,\r\n      posts\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.mainContainer}>\r\n        <Router>\r\n          <ScrollToTop>\r\n            <Header\r\n              isLoggedIn={isLoggedIn}\r\n              handleCreatePostClick={this.handleCreatePostClick}\r\n            />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to={{ pathname: '/blog-react/' }} />\r\n              </Route>\r\n              <Route exact path=\"/blog-react/\">\r\n                {posts.length > 0 ? (\r\n                  <Posts />\r\n                ) : (\r\n                  <Home isLoggedIn={isLoggedIn} />\r\n                )}\r\n              </Route>\r\n              <ProtectedRoute\r\n                path={'/blog-react/create'}\r\n                isLoggedIn={isLoggedIn}\r\n                component={CreatePost}\r\n                currentUserId={currentUserId}\r\n                handlePostAdd={this.handlePostAdd}\r\n              />\r\n              <ProtectedRoute\r\n                path={'/blog-react/auth'}\r\n                isLoggedIn={isLoggedIn}\r\n                isCreatePostClicked={isCreatePostClicked}\r\n                handleLogIn={this.handleLogIn}\r\n                handleLogOut={this.handleLogOut}\r\n                handleCreatePostClick={this.handleCreatePostClick}\r\n              />\r\n              <ProtectedRoute\r\n                path={'/blog-react/post/:id'}\r\n                isLoggedIn={isLoggedIn}\r\n                component={PostDetails}\r\n                currentUserId={currentUserId}\r\n                posts={posts}\r\n              />\r\n            </Switch>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Main);\r\n","export const styles = {\r\n  mainContainer: {\r\n    backgroundColor: '#f9f9f9',\r\n    minHeight: '100vh'\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Components/Main/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}